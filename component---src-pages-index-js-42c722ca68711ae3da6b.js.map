{"version":3,"sources":["webpack:///./src/components/nav-bar.js","webpack:///./src/components/layout.js","webpack:///./src/pages/index.js","webpack:///./src/services/auth.js"],"names":["NavBar","greetingMessage","isLoggedIn","getUser","name","style","display","flex","justifyContent","borderBottom","to","href","onClick","event","preventDefault","logout","navigate","Layout","children","Home","window","localStorage","getItem","JSON","parse","setUser","user","setItem","stringify","handleLogin","username","password","email","callback"],"mappings":"oKAIe,SAASA,IACtB,IAAIC,EAAkB,GAMtB,OAJEA,EADEC,cACa,SAAYC,cAAUC,KAEnB,wBAGlB,mBACEC,MAAO,CACLC,QAAS,OACTC,KAAM,IACNC,eAAgB,gBAChBC,aAAc,sBAGhB,wBAAOR,GACP,uBACE,YAAC,OAAD,CAAMS,GAAG,KAAT,QADF,IAIE,YAAC,OAAD,CAAMA,GAAG,YAAT,WAJF,IAMGR,cACC,iBACES,KAAK,IACLC,QAAS,SAAAC,GACPA,EAAMC,iBAENC,aAAO,kBAAMC,mBAAS,eAL1B,UAUE,OC3BGC,IAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,8BACE,YAAClB,EAAD,MACCkB,K,oKCDU,SAASC,IACtB,OACE,YAAC,IAAD,KACE,+BAAWjB,cAAeC,cAAUC,KAAO,QAA3C,KACA,qBACGF,cACC,iEACmC,IACjC,YAAC,OAAD,CAAMQ,GAAG,gBAAT,YAGF,4CACa,YAAC,OAAD,CAAMA,GAAG,cAAT,UADb,kC,oCCjBV,wIAAO,IAEMP,EAAU,iBAF0B,oBAAXiB,QAGrBA,OAAOC,aAAaC,QAAQ,cACvCC,KAAKC,MAAMJ,OAAOC,aAAaC,QAAQ,eACvC,IAEAG,EAAU,SAAAC,GAAI,OAClBN,OAAOC,aAAaM,QAAQ,aAAcJ,KAAKK,UAAUF,KAE9CG,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtC,MAAY,SAARD,GAA+B,SAARC,GAClBN,EAAQ,CACbK,SAAS,OACT1B,KAAK,SACL4B,MAAM,wBAOC9B,EAAa,WAGxB,QAFaC,IAEC2B,UAGHf,EAAS,SAAAkB,GACpBR,EAAQ,IACRQ","file":"component---src-pages-index-js-42c722ca68711ae3da6b.js","sourcesContent":["import React from \"react\";\r\nimport { Link, navigate } from \"gatsby\";\r\nimport { getUser, isLoggedIn, logout } from \"../services/auth\";\r\n\r\nexport default function NavBar() {\r\n  let greetingMessage = \"\";\r\n  if (isLoggedIn()) {\r\n    greetingMessage = `Hello ${getUser().name}`;\r\n  } else {\r\n    greetingMessage = \"You are not logged in\";\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: \"1\",\r\n        justifyContent: \"space-between\",\r\n        borderBottom: \"1px solid #d1c1e0\"\r\n      }}\r\n    >\r\n      <span>{greetingMessage}</span>\r\n      <nav>\r\n        <Link to=\"/\">Home</Link>\r\n        {` `}\r\n        {/* <Link to=\"/app/profile\">Profile</Link> */}\r\n        <Link to=\"/profile\">Profile</Link>\r\n        {` `}\r\n        {isLoggedIn() ? (\r\n          <a\r\n            href=\"/\"\r\n            onClick={event => {\r\n              event.preventDefault();\r\n              // logout(() => navigate(`/app/login`));\r\n              logout(() => navigate(`/login`));\r\n            }}\r\n          >\r\n            Logout\r\n          </a>\r\n        ) : null}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport NavBar from \"./nav-bar\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <NavBar />\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { getUser, isLoggedIn } from \"../services/auth\";\r\n\r\nimport Layout from \"../components/layout\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Layout>\r\n      <h1>Hello {isLoggedIn() ? getUser().name : \"world\"}!</h1>\r\n      <p>\r\n        {isLoggedIn() ? (\r\n          <>\r\n            You are logged in, so check your{\" \"}\r\n            <Link to=\"/app/profile\">profile</Link>\r\n          </>\r\n        ) : (\r\n          <>\r\n            You should <Link to=\"/app/login\">log in</Link> to see restricted\r\n            content\r\n          </>\r\n        )}\r\n      </p>\r\n    </Layout>\r\n  );\r\n}\r\n","export const isBrowser = () => typeof window !== \"undefined\";\r\n\r\nexport const getUser = () =>\r\n  isBrowser() && window.localStorage.getItem(\"gatsbyUser\")\r\n    ? JSON.parse(window.localStorage.getItem(\"gatsbyUser\"))\r\n    : {};\r\n\r\nconst setUser = user =>\r\n  window.localStorage.setItem(\"gatsbyUser\", JSON.stringify(user));\r\n\r\nexport const handleLogin = ({ username, password }) => {\r\n  if (username === `john` && password === `pass`) {\r\n    return setUser({\r\n      username: `john`,\r\n      name: `Johnny`,\r\n      email: `johnny@example.org`\r\n    });\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n  const user = getUser();\r\n\r\n  return !!user.username;\r\n};\r\n\r\nexport const logout = callback => {\r\n  setUser({});\r\n  callback();\r\n};\r\n"],"sourceRoot":""}